import java.lang.Math;
import java.lang.String;
class SubstringSearch{
    
    public static void RabinKarp(String pat, String txt, int q){
        int d=256;
        int m=pat.length();
        int n=txt.length();
        int p=0;
        int t=0;
        int h=1;
        for(int i=0;i<m-1;i++){
            h=(h*d)%q;
        }
        
        for(int i=0;i<m;i++){
            p=(d*p+pat.charAt(i))%q;
            t=(d*t+txt.charAt(i))%q;
        }
        int j;
        for(int i=0;i<n-m+1;i++){
            if(p==t){
                for(j=0;j<m;j++){
                    if(txt.charAt(i+j)!=pat.charAt(j))
                        break;
                    
                }
                if (j==m)
                        System.out.println("Found at"+i);
            }
             if ( i < n-m ){
            t=(d*(t-txt.charAt(i)*h)+txt.charAt(i+m))%q;
                 if (t < 0)
                t = (t + q);
             }
        }
    }
    
    public static void main(String[] args){
        String pat="ear";
        String txt="doe are hearing";
        int prime=101;
        RabinKarp(pat,txt,prime);
    }
}
